//! This module defines the RegisterData struct and each possible register in the control table.

/// RegisterData is used to store the address, length and type of register.
#[derive(Clone, Debug, PartialEq, Eq, Hash)]
#[cfg_attr(feature = "serde", derive(serde::Serialize, serde::Deserialize))]
pub struct RegisterData {
    /// The address of the register
    pub address: u16,
    /// The number of bytes in the register
    pub length: u16,
}

#[allow(missing_docs)]
#[derive(Clone, Copy, Eq, PartialEq, Debug, Hash, Ord, PartialOrd, derive_more::Display)]
#[cfg_attr(feature = "serde", derive(serde::Serialize, serde::Deserialize, strum::EnumString))]
pub enum Register {
    ModelNumber,
	ModelInformation,
	FirmwareVersion,
	Id,
	BaudRate,
	ReturnDelayTime,
	DriveMode,
	OperatingMode,
	SecondaryId,
	ProtocolVersion,
	HomingOffset,
	MovingThreshold,
	TemperatureLimit,
	MotorTemperatureLimit,
	MaxVoltageLimit,
	MinVoltageLimit,
	PwmLimit,
	CurrentLimit,
	AccelerationLimit,
	VelocityLimit,
	MaxPositionLimit,
	MinPositionLimit,
	StartupConfiguration,
	Shutdown,
	TorqueEnable,
	Led,
	StatusReturnLevel,
	RegisteredInstruction,
	HardwareErrorStatus,
	VelocityIGain,
	VelocityPGain,
	PositionPGain,
	Feedforward2ndGain,
	Feedforward1stGain,
	BusWatchdog,
	GoalPwm,
	GoalCurrent,
	GoalVelocity,
	ProfileAcceleration,
	ProfileVelocity,
	GoalPosition,
	RealTimeTick,
	Moving,
	MovingStatus,
	PresentPwm,
	PresentCurrent,
	PresentVelocity,
	PresentPosition,
	VelocityTrajectory,
	PositionTrajectory,
	PresentInputVoltage,
	PresentTemperature,
	PresentMotorTemperature,
	BackupReady,
	StartupConfig,
	InPositionThreshold,
	FollowingErrorThreshold,
	GearRatioNumerator,
	GearRatioDenominator,
	SafeStopTime,
	BrakeDelay,
	GoalUpdateDelay,
	OverexcitationVoltage,
	NormalExcitationVoltage,
	OverexcitationTime,
	NotchFilterFrequency,
	NotchFilterBandwidth,
	NotchFilterDepth,
	PresentVelocityLpfFrequency,
	GoalCurrentLpfFrequency,
	PositionFfLpfTime,
	VelocityFfLpfTime,
	ControlState,
	ErrorCode,
	GainSave,
	VelocityFfGain,
	PositionDGain,
	PositionIGain,
	PositionFfGain,
	ProfileAccelerationTime,
	ProfileTime,
	PwmOffset,
	CurrentOffset,
    VelocityOffset,
}